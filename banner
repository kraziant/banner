##############################################################################
## Программа для контроля состояния связи между стойками
##############################################################################
## Периодически (1 с) запускаем программу $app и запоминаем её выходной 
## поток. Если в следующем периоде опроса выходной поток отличается, считаем
## что связь в порядке, иначе связи нет.
##
## Если связь в порядке окно зеленого цвета, подпись on-line
## Если связи нет - окно красного цвета, подпись off-line
##
##
##
##                                                                 tcl rulit
##
##############################################################################


##############################################################################
# Приложение для контроля состояния
# Ожидается что оно будет возвращать значение временной метки
##############################################################################
set app "./app"
##############################################################################

##############################################################################
# Переменная главного окна
##############################################################################
set w .
##############################################################################
# Переменные текущего и предидущего контролируемого значения
##############################################################################
set retval 0
set prev_retval 0
##############################################################################

##############################################################################
# Запрос текущего состояния
##############################################################################
proc get_status {} {

  global retval app

  catch {exec $app} retval
  #set retval [catch {exec $app} retval]

  #puts -nonewline "> " 
  #puts $retval
  
}
##############################################################################

##############################################################################
# Периодический опрос состояния и контроль значения
##############################################################################
proc tick {} {

  global retval prev_retval w

  # Период опроса 1000 мс
  after 1000 tick 
  
  get_status

  if {$retval eq $prev_retval} {
    $w configure -background  #bb0000
    .l1 configure -text "off-line"
  } else {
    $w configure -background  #00bb00
    .l1 configure -text "on-line"
  }

  set prev_retval $retval

}
##############################################################################

##############################################################################
# Перемещение окна мышкой
proc movewintoptr w {
    lassign [winfo pointerxy $w] x y
    wm geometry $w +$x+$y
}

##############################################################################
# Main
##############################################################################

wm overrideredirect $w 1
#wm attributes $w -type tooltip

wm title $w "line"
wm geometry $w 64x64+10+10
$w configure -background  #00bb00

frame .bottom
pack .bottom -side bottom -fill both -anchor s

label .l1 -text "line"
pack .l1 -in .bottom

bind $w <Double-1>   {
    exit
}

bind $w <1> {
    set x [expr [winfo rootx $w]-%X]
    set y [expr [winfo rooty $w]-%Y]
 }

bind $w <B1-Motion> {
     wm geometry $w +[expr %X+$x]+[expr %Y+$y]
 }

bind all <Control-c> exit
bind all <Control-q> exit

focus .

tick
